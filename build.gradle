group 'micro-services'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
    }
    repositories {
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE"
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: "idea"
    apply plugin: "docker"

    repositories {
        //        https://github.com/spring-cloud/spring-cloud-openfeign/issues/13
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        mavenCentral()
    }

    ext {
        springCloudVersion = 'Finchley.M9'
        mybatisSpringBootStarterVersion = '1.3.2'
        logstashLogbackEncoderVersion = '5.0'
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = false
        applicationName = jar.baseName
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }
}

project(":service-eureka") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-server')
        compile("org.springframework.boot:spring-boot-starter-undertow")
        compile("org.springframework.boot:spring-boot-starter-actuator")

        compile "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"

        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(":api-user") {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compile.exclude module: "spring-boot-starter-tomcat"
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-actuator')
        compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
        compile('org.springframework.cloud:spring-cloud-starter-openfeign')
        compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
        compile("org.springframework.boot:spring-boot-starter-undertow")

        compile "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVersion}"

        runtime('org.springframework.boot:spring-boot-devtools')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.springframework.security:spring-security-test')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}